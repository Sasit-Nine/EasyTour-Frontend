import { useMutation } from "@apollo/client";
import { UPDATE_BOOKING_STATUS } from "../services/Graphql"; // ตรวจสอบ path

const useBookingStatus = (refetch) => {
  const [updateBookingStatus] = useMutation(UPDATE_BOOKING_STATUS);

  const updateStatus = async (id, newStatus, setLocalBookings, setHistoryBookings, isHistory = false) => {
    Modal.confirm({
      title: "Confirm Status Change",
      content: `Are you sure you want to change the status to "${newStatus}"?`,
      okText: "Yes",
      cancelText: "No",
      onOk: async () => {
        try {
          await updateBookingStatus({ variables: { id, status: newStatus } });

          // รีเฟรชข้อมูลใหม่
          refetch();

          if (isHistory) {
            setHistoryBookings((prev) =>
              prev.map((booking) =>
                booking.id === id ? { ...booking, status: newStatus } : booking
              )
            );
          } else {
            setLocalBookings((prev) => {
              const updatedList = prev.filter((booking) => booking.id !== id);
              const changedItem = prev.find((booking) => booking.id === id);
              if (changedItem) {
                setHistoryBookings((prevHistory) => [
                  ...prevHistory,
                  { ...changedItem, status: newStatus },
                ]);
              }
              return updatedList;
            });
          }
        } catch (error) {
          console.error("Error updating status:", error);
        }
      },
    });
  };

  return updateStatus;
};

export default useBookingStatus;
